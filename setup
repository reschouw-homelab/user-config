#!/bin/bash
# Runs a number of operations to tie in all the config in this repo into 
# it's respective applications

set -e

BASHRC_LOOP='for i in ~/.config/bashrc/*.conf; do source $i; done'
HOMEDIRS='.bin .bin/terraform-plugins .vim/pack/git-plugins/start'

# Determine if Mac or Linux(Ubuntu)
OS="$(uname)"

OUTPUT=()

# Create directories used for various purposes
ensure-directories() {
  for DIR in $HOMEDIRS; do
    if [[ -d $HOME/$DIR ]]; then
      OUTPUT+=("$DIR ok")
    else
      mkdir -p "$HOME/$DIR"
      OUTPUT+=("$DIR changed")
    fi
  done
}

# Ensure bashrc sources this repo's config files
bashrc-loop() {
if (($(grep -Fc "$BASHRC_LOOP" ~/.bashrc) > 0 ))
  then
      OUTPUT+=("bashrc ok")
  else
    echo "# Link to config in https://github.com/reschouw/user-config" >> ~/.bashrc
    echo "$BASHRC_LOOP" >> ~/.bashrc
      OUTPUT+=("bashrc changed")
  fi
}

# Create Symlink for .vimrc
vimrc-link(){
  if [ ! -L ~/.vimrc ]
  then
    ln -s ~/.config/vim/vimrc ~/.vimrc
    OUTPUT+=("vimrc changed")
  else
    OUTPUT+=("vimrc ok")
  fi
}

# Install ALE (vim linter)
ale-install(){
  if [ ! -d ~/.vim/pack/git-plugins/start/ale ]
  then
    git clone --depth 1 https://github.com/dense-analysis/ale.git ~/.vim/pack/git-plugins/start/ale > /dev/null
    OUTPUT+=("ALE changed")
  else
    OUTPUT+=("ALE ok")
  fi
}

# Install Shellcheck (to be used in vim)
shellcheck-install(){
  if  ! shellcheck -V > /dev/null 2>&1 ; then
    if [[ "$OS" == "Linux" ]]; then
      sudo apt-get update > /dev/null
      sudo apt-get install -y shellcheck > /dev/null
    else
      brew install shellcheck
    fi
      OUTPUT+=("shellcheck changed")
  else
      OUTPUT+=("shellcheck ok")
  fi
}

# Create Symlink for .terraformrc
terraformrc-link(){
  if [ ! -L ~/.terraformrc ]
  then
    ln -s ~/.config/terraform/terraformrc ~/.terraformrc
    OUTPUT+=("terraformrc changed")
  else
    OUTPUT+=("terraformrc ok")
  fi
}

ensure-directories
bashrc-loop
vimrc-link
ale-install
shellcheck-install
terraformrc-link

# Print all output
# https://stackoverflow.com/a/3016695
for LINE in "${OUTPUT[@]}"; do
  echo "$LINE"
done | column -t
